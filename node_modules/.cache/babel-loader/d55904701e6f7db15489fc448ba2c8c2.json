{"ast":null,"code":"\"use strict\";\n/**\n * findValue\n * Finds the value at given path in the specified object.\n *\n * @name findValue\n * @function\n * @param {Object} obj The input object.\n * @param {String} path The path to the value you want to find.\n * @return {Anything} The path value.\n */\n\nmodule.exports = function findValue(obj, path) {\n  var dotIndex = path.indexOf(\".\");\n\n  if (!~dotIndex) {\n    if (obj === undefined || obj === null) {\n      return undefined;\n    }\n\n    return obj[path];\n  }\n\n  var field = path.substring(0, dotIndex),\n      rest = path.substring(dotIndex + 1);\n\n  if (obj === undefined || obj === null) {\n    return undefined;\n  }\n\n  obj = obj[field];\n\n  if (!rest) {\n    return obj;\n  }\n\n  return findValue(obj, rest);\n};","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/node_modules/find-value/lib/index.js"],"names":["module","exports","findValue","obj","path","dotIndex","indexOf","undefined","field","substring","rest"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC3C,MAAIC,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAf;;AAEA,MAAI,CAAC,CAACD,QAAN,EAAgB;AACZ,QAAIF,GAAG,KAAKI,SAAR,IAAqBJ,GAAG,KAAK,IAAjC,EAAuC;AACnC,aAAOI,SAAP;AACH;;AACD,WAAOJ,GAAG,CAACC,IAAD,CAAV;AACH;;AAED,MAAII,KAAK,GAAGJ,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBJ,QAAlB,CAAZ;AAAA,MACIK,IAAI,GAAGN,IAAI,CAACK,SAAL,CAAeJ,QAAQ,GAAG,CAA1B,CADX;;AAGA,MAAIF,GAAG,KAAKI,SAAR,IAAqBJ,GAAG,KAAK,IAAjC,EAAuC;AACnC,WAAOI,SAAP;AACH;;AAEDJ,EAAAA,GAAG,GAAGA,GAAG,CAACK,KAAD,CAAT;;AACA,MAAI,CAACE,IAAL,EAAW;AACP,WAAOP,GAAP;AACH;;AACD,SAAOD,SAAS,CAACC,GAAD,EAAMO,IAAN,CAAhB;AACH,CAtBD","sourcesContent":["\"use strict\";\n\n/**\n * findValue\n * Finds the value at given path in the specified object.\n *\n * @name findValue\n * @function\n * @param {Object} obj The input object.\n * @param {String} path The path to the value you want to find.\n * @return {Anything} The path value.\n */\nmodule.exports = function findValue(obj, path) {\n    var dotIndex = path.indexOf(\".\");\n\n    if (!~dotIndex) {\n        if (obj === undefined || obj === null) {\n            return undefined;\n        }\n        return obj[path];\n    }\n\n    var field = path.substring(0, dotIndex),\n        rest = path.substring(dotIndex + 1);\n\n    if (obj === undefined || obj === null) {\n        return undefined;\n    }\n\n    obj = obj[field];\n    if (!rest) {\n        return obj;\n    }\n    return findValue(obj, rest);\n};"]},"metadata":{},"sourceType":"script"}