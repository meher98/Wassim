{"ast":null,"code":"import _objectSpread from\"D:/meher/Bureau/Projet_trading-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/meher/Bureau/Projet_trading-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import'../assets/css/SignIn.css';import axios from\"axios\";import{OverlayTrigger,Tooltip}from\"react-bootstrap\";import ReactLoading from\"react-loading\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SignIn(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),api=_useState2[0],setApi=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),secret=_useState4[0],setSecret=_useState4[1];function Next(){if(!props.api){setApi(true);setTimeout(function(){return setApi(false);},1500);}if(!props.secret){setSecret(true);setTimeout(function(){return setSecret(false);},1500);}if(props.api!==\"\"&&props.secret!==\"\"){props.setLoading(true);props.Send();}}return/*#__PURE__*/_jsx(\"div\",{className:\"loginContainer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"login\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"login-heading\",children:\"Connect your Binance acount\"}),/*#__PURE__*/_jsx(\"p\",{className:\"login-text\",children:\"The softest integration to our partner Binance Global or Binance US. Just follow these steps\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stepsList\",children:/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Go to Binance website\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Create API Key. See how.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Copy your API Key & Secret Key and paste it into the field below.\"})]})}),/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"div\",{className:\"field-container -password\",children:/*#__PURE__*/_jsx(OverlayTrigger,{delay:{show:250,hide:400},overlay:renderTooltipMissing,show:api,placement:\"top\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Your code\",onChange:function onChange(e){return props.setApi(e.target.value);}})})}),/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",children:\"Secret Key\"}),/*#__PURE__*/_jsx(\"div\",{className:\"field-container -password\",children:/*#__PURE__*/_jsx(OverlayTrigger,{delay:{show:250,hide:400},overlay:renderTooltipMissing,show:secret,placement:\"top\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Your code\",onChange:function onChange(e){return props.setSecret(e.target.value);}})})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-custom btn-lg page-scroll loginBtn\",onClick:Next,children:props.loading?/*#__PURE__*/_jsx(ReactLoading,{height:\"26px\",width:\"24px\",color:\"white\",type:\"spin\"}):\"Get Started\"})]})})});}var renderTooltipMissing=function renderTooltipMissing(props){return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({id:\"button-tooltip\"},props),{},{children:\"Please add all the field\"}));};","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Step3.jsx"],"names":["React","useState","axios","OverlayTrigger","Tooltip","ReactLoading","SignIn","props","api","setApi","secret","setSecret","Next","setTimeout","setLoading","Send","show","hide","renderTooltipMissing","e","target","value","loading"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\nimport '../assets/css/SignIn.css'\nimport axios from \"axios\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport ReactLoading from \"react-loading\";\nexport default function SignIn(props) {\n\n   \n    const [api, setApi] = useState(false);\n    const [secret, setSecret] = useState(false);\n    function Next() {\n        if(!props.api){\n            setApi(true)\n            setTimeout(() => setApi(false), 1500);\n        }\n        if(!props.secret){\n            setSecret(true)\n            setTimeout(() => setSecret(false), 1500);\n        }\n        if(props.api!==\"\" && props.secret!==\"\" ){\n          props.setLoading(true)\n            props.Send()\n           \n\n        }\n\n\n        \n    }\n    return (\n        <div className=\"loginContainer\">\n\n            <div className=\"login\">\n                <div className=\"login-form\">\n                    <h1 className=\"login-heading\">Connect your\n                        Binance acount</h1>\n                    <p className=\"login-text\">The softest integration to our\n                        partner Binance Global or Binance\n                        US. Just follow these steps</p>\n\n                    <div className=\"stepsList\">\n                        <ol>\n                            <li>\n                                Go to Binance website\n                            </li>\n                            <li>\n                                Create API Key. See how.\n                            </li>\n                            <li>\n                                Copy your API Key & Secret Key and paste it into the field below.\n                            </li>\n                        </ol>\n                    </div>\n                    <label className=\"formLabel\">API Key</label>\n                    <div className=\"field-container -password\">\n                    <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={api}\n                            placement=\"top\"\n                        >\n                        <input type=\"password\" placeholder=\"Your code\"  onChange={(e)=>props.setApi(e.target.value)}/>\n                        </OverlayTrigger>\n                    </div>\n                    <label className=\"formLabel\">Secret Key</label>\n                    \n                    <div className=\"field-container -password\">\n                    <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={secret}\n                            placement=\"top\"\n                        >\n                        <input type=\"password\" placeholder=\"Your code\" onChange={(e)=>props.setSecret(e.target.value)} />\n                   \n                        </OverlayTrigger>\n                    </div>\n                    <button className='btn btn-custom btn-lg page-scroll loginBtn' onClick={Next}>{ props.loading ? (<ReactLoading\n                            height={\"26px\"}\n                            width={\"24px\"}\n                            color=\"white\" \n                        \n                            type=\"spin\"\n                        />\n                    ) : (\n                        \"Get Started\" \n                    )}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst renderTooltipMissing = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Please add all the field\n    </Tooltip>\n);"]},"metadata":{},"sourceType":"module"}