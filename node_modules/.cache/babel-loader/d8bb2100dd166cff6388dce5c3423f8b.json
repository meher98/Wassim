{"ast":null,"code":"var _jsxFileName = \"D:\\\\meher\\\\Bureau\\\\Projet_trading-main\\\\src\\\\components\\\\Code.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"; // import logo from \"../assets/images/logobleu.png\"\n\nimport '../assets/css/SignIn.css';\nimport axios from 'axios';\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ReactLoading from \"react-loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [passwordTest, setPasswordTest] = useState(false);\n  const [passwordConfirmTest, setPasswordConfirmTest] = useState(false);\n  const [codeTest, setcodeTest] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  function Login() {\n    if (!password || !passwordConfirm || !code) {\n      if (!code) {\n        setcodeTest(true);\n        setTimeout(() => setcodeTest(false), 1500);\n      }\n\n      if (!passwordConfirm) {\n        setPasswordConfirmTest(true);\n        setTimeout(() => setPasswordConfirmTest(false), 1500);\n      }\n\n      if (!password) {\n        setPasswordTest(true);\n        setTimeout(() => setPasswordTest(false), 1500);\n      }\n    } else if (password !== passwordConfirm) {\n      setConfirm(true);\n      setPasswordConfirmTest(true);\n      setTimeout(() => setConfirm(false), 2000);\n      setTimeout(() => setPasswordConfirmTest(false), 1500);\n    } else {\n      setLoading(true);\n      axios.post(\"http://back.richmondanalytica.com/auth/client/new-password\", {\n        password: password,\n        token: code\n      }).then(res => {\n        setMsg(true);\n        setTimeout(() => setMsg(false), 1500);\n        setLoading(false);\n        setTimeout(() => history.push(\"/login\"), 2000);\n      }).catch(err => {\n        setError(true);\n        setTimeout(() => setError(false), 1500);\n        setLoading(false);\n      });\n    }\n  }\n\n  function ReSend() {\n    axios.post(\"http://back.richmondanalytica.com/auth/client/forgot-password\", {\n      email: localStorage.getItem(\"email\")\n    }).then(res => {\n      localStorage.removeItem(\"email\");\n    }).catch(err => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signUpLink\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"here\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 66\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          show: msg,\n          variant: \"success\",\n          style: {\n            width: \"500px\",\n            margin: \"auto auto\"\n          },\n          children: \"Password updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          show: error,\n          variant: \"danger\",\n          style: {\n            width: \"500px\",\n            margin: \"auto auto\"\n          },\n          children: \"Session expired\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-heading\",\n          children: \"Reset code sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: [\"Did not recieve the reset mail ? click \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ReSend,\n            style: {\n              backgroundColor: \"transparent\",\n              border: \"transparent\"\n            },\n            className: \"here\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 86\n          }, this), \" to resend\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -username\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: codeTest,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"demo\",\n              placeholder: \"Reset code*\",\n              onChange: e => {\n                setCode(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: passwordTest,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"demo\",\n              placeholder: \"New password*\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: confirm === false ? renderTooltipMissing : renderTooltip,\n            show: passwordConfirmTest,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"demo\",\n              placeholder: \"Confirm password*\",\n              onChange: e => {\n                setPasswordConfirm(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-custom btn-lg page-scroll loginBtn\",\n          type: \"submit\",\n          onClick: Login,\n          children: loading ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n            height: \"20px\",\n            width: \"24px\",\n            color: \"#0283b0\",\n            type: \"spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 123\n          }, this) : \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"tPumCrIM8CfP/tAGecgVyDoWBsE=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\n\nconst renderTooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Icompatible passwords\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 5\n}, this);\n\nconst renderTooltipMissing = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Please add all the field\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 172,\n  columnNumber: 5\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Code.jsx"],"names":["React","useState","Link","useHistory","axios","OverlayTrigger","Tooltip","Alert","ReactLoading","SignIn","password","setPassword","passwordConfirm","setPasswordConfirm","code","setCode","passwordTest","setPasswordTest","passwordConfirmTest","setPasswordConfirmTest","codeTest","setcodeTest","confirm","setConfirm","msg","setMsg","loading","setLoading","error","setError","history","Login","setTimeout","post","token","then","res","push","catch","err","ReSend","email","localStorage","getItem","removeItem","width","margin","backgroundColor","border","show","hide","renderTooltipMissing","e","target","value","renderTooltip","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\n// import logo from \"../assets/images/logobleu.png\"\nimport '../assets/css/SignIn.css'\nimport axios from 'axios';\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nimport ReactLoading from \"react-loading\";\nexport default function SignIn() {\n    const [password, setPassword] = useState(\"\")\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n    const [code, setCode] = useState(\"\")\n    const [passwordTest, setPasswordTest] = useState(false)\n    const [passwordConfirmTest, setPasswordConfirmTest] = useState(false)\n    const [codeTest, setcodeTest] = useState(false)\n    const [confirm, setConfirm] = useState(false)\n    const [msg, setMsg] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n    const history = useHistory()\n\n    function Login() {\n        if (!password || !passwordConfirm || !code) {\n            if (!code) {\n                setcodeTest(true)\n                setTimeout(() => setcodeTest(false), 1500);\n\n            }\n            if (!passwordConfirm) {\n                setPasswordConfirmTest(true)\n                setTimeout(() => setPasswordConfirmTest(false), 1500);\n\n            }\n            if (!password) {\n                setPasswordTest(true)\n                setTimeout(() => setPasswordTest(false), 1500);\n\n            }\n\n\n\n        }\n        else if (password !== passwordConfirm) {\n            setConfirm(true)\n            setPasswordConfirmTest(true)\n\n            setTimeout(() => setConfirm(false), 2000);\n            setTimeout(() => setPasswordConfirmTest(false), 1500);\n\n        }\n\n\n        else {\n            setLoading(true)\n            axios.post(\"http://back.richmondanalytica.com/auth/client/new-password\", {\n                password: password,\n                token: code\n            }).then(res => {\n                setMsg(true)\n                setTimeout(() => setMsg(false), 1500);\n                setLoading(false)\n                setTimeout(() => history.push(\"/login\"), 2000);\n               \n\n            }).catch(err => {\n                setError(true)\n                setTimeout(() => setError(false), 1500);\n                setLoading(false)\n            })\n        }\n    }\n\n    function ReSend() {\n      \n            axios.post(\"http://back.richmondanalytica.com/auth/client/forgot-password\", {\n                email: localStorage.getItem(\"email\"),\n                \n            }).then(res => {\n                \n                localStorage.removeItem(\"email\")\n    \n            }).catch(err => {\n                \n    \n            })\n\n       \n\n    }\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"login-header\">\n                {/* <img src={logo} className=\"loginLogo\" /> */}\n                <p className=\"signUpLink\">Don't have an account? <Link to=\"/signup\" className=\"here\">Sign Up</Link> </p>\n            </div>\n            <div className=\"login\">\n                <div className=\"login-form\">\n                    <Alert\n\n                        show={msg}\n                        variant={\"success\"}\n                        style={{ width: \"500px\", margin: \"auto auto\" }}\n                    >\n                        {\"Password updated\"}\n                    </Alert>\n                    <Alert\n\n                        show={error}\n                        variant={\"danger\"}\n                        style={{ width: \"500px\", margin: \"auto auto\" }}\n                    >\n                        {\"Session expired\"}\n                    </Alert>\n                    <h1 className=\"login-heading\">Reset code sent\n                    </h1>\n                    <p className=\"login-text\">Did not recieve the reset mail ? click <button onClick={ReSend} style={{backgroundColor:\"transparent\",border:\"transparent\"}}className=\"here\">here</button> to resend</p>\n                    <div className=\"field-container -username\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={codeTest}\n                            placement=\"top\"\n                        >\n\n                            <input type=\"email\" name=\"demo\" placeholder=\"Reset code*\" onChange={(e) => { setCode(e.target.value) }} />\n                        </OverlayTrigger>\n                    </div>\n                    <div className=\"field-container -password\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={passwordTest}\n                            placement=\"top\"\n                        >\n                            <input type=\"password\" name=\"demo\" placeholder=\"New password*\" onChange={(e) => { setPassword(e.target.value) }} />\n                        </OverlayTrigger>\n                    </div>\n                    <div className=\"field-container -password\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={confirm === false ? renderTooltipMissing : renderTooltip}\n                            show={passwordConfirmTest}\n                            placement=\"top\"\n                        >\n                            <input type=\"password\" name=\"demo\" placeholder=\"Confirm password*\" onChange={(e) => { setPasswordConfirm(e.target.value) }} />\n                        </OverlayTrigger>\n                    </div>\n                    <div className='btn btn-custom btn-lg page-scroll loginBtn' type=\"submit\" onClick={Login}>{loading ? (<ReactLoading\n                            height={\"20px\"}\n                            width={\"24px\"}\n                            color=\"#0283b0\" \n                        \n                            type=\"spin\"\n                        />\n                    ) : (\n                        \"Confirm\"\n                    )}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nconst renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Icompatible passwords\n    </Tooltip>\n);\n\nconst renderTooltipMissing = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Please add all the field\n    </Tooltip>\n);"]},"metadata":{},"sourceType":"module"}