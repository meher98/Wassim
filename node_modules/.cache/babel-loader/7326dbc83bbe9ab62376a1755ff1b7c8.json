{"ast":null,"code":"var _jsxFileName = \"D:\\\\meher\\\\Bureau\\\\Projet_trading-main\\\\src\\\\components\\\\Chiffre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport Item from './Item';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chiffre() {\n  _s();\n\n  useEffect(() => {\n    setInterval(Repetation(), 60000);\n  }, []);\n  const [data, setData] = useState(\"\"); //myGFG({pic:\"ADA 2.24154546 $ -1\",question:\"BTC 2.24154546 $ +1\",answer:\"USD 2.24154546 $ -1\",wrongAnswer1:\"TRT 2.24154546 $ -1\",wrongAnswer2:\"HREC 2.24154546 $ -1\"})\n\n  function myGFG(obj) {\n    var res = [];\n\n    for (var i in obj) res.push(obj[i]);\n\n    return res;\n  }\n\n  function Repetation() {\n    axios.get(\"http://127.0.0.1:5000/\").then(data => {\n      setData(myGFG(data.data));\n    });\n  }\n\n  if (!data) {\n    return \"\";\n  }\n\n  const settings = {\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    arrows: false,\n    dots: false,\n    autoplay: true,\n    speed: 500,\n    className: `testimonial-content--3 testimonial-grid`,\n    responsive: [{\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 2\n      }\n    }, {\n      breakpoint: 992,\n      settings: {\n        slidesToShow: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Sponsors-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Nos Sponsors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          style: {\n            backgroundColor: \"black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n            children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n              symbole: item.split(\" \")[2],\n              value: item.split(\" \")[0],\n              counter: parseFloat(item.split(\" \")[1]).toFixed(4),\n              fleche: item.split(\" \")[3]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chiffre, \"7JT8uijT1Nc7IxPPphSlxW5h5UI=\");\n\n_c = Chiffre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chiffre\");","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Chiffre.jsx"],"names":["React","useEffect","useState","Slider","Item","axios","Chiffre","setInterval","Repetation","data","setData","myGFG","obj","res","i","push","get","then","settings","slidesToShow","slidesToScroll","arrows","dots","autoplay","speed","className","responsive","breakpoint","backgroundColor","map","item","index","split","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React , {useEffect, useState} from 'react'\r\nimport Slider from \"react-slick\";\r\nimport Item from './Item';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport axios from \"axios\"\r\n\r\nexport default function Chiffre() {\r\n    useEffect(() => {\r\n        setInterval(Repetation(),60000)\r\n    }, [])\r\n    const [data, setData] = useState(\"\")\r\n    //myGFG({pic:\"ADA 2.24154546 $ -1\",question:\"BTC 2.24154546 $ +1\",answer:\"USD 2.24154546 $ -1\",wrongAnswer1:\"TRT 2.24154546 $ -1\",wrongAnswer2:\"HREC 2.24154546 $ -1\"})\r\n    function myGFG(obj) {\r\n        var res = [];\r\n          \r\n        for(var i in obj)\r\n            res.push(obj[i]);\r\n        return res \r\n    }\r\n    function Repetation(){\r\n        axios.get(\"http://127.0.0.1:5000/\")\r\n        .then(data=>{\r\n            setData(myGFG(data.data))\r\n        })\r\n    }\r\n    if(!data)\r\n    {\r\n        return \"\"\r\n    }\r\n    \r\n    const settings = {\r\n        slidesToShow: 5,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        dots: false,\r\n        autoplay: true,\r\n        speed:500,\r\n        className: `testimonial-content--3 testimonial-grid`,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 2\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 1\r\n                }\r\n            },\r\n        ]\r\n    }\r\n    return (\r\n        <div >\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"Sponsors-title\">\r\n                        <h1>Nos Sponsors</h1>\r\n                    </div>\r\n                    <div className=\"\"  style={{backgroundColor:\"black\"}}>\r\n                        <Slider {...settings}>\r\n                            {\r\n                                data.map((item,index) => (\r\n                                    <Item key={index} symbole={item.split(\" \")[2]} value={item.split(\" \")[0]} counter={parseFloat(item.split(\" \")[1]).toFixed(4)} fleche={item.split(\" \")[3]}/>\r\n                                ))\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}