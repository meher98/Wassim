{"ast":null,"code":"var _jsxFileName = \"D:\\\\meher\\\\Bureau\\\\Projet_trading-main\\\\src\\\\components\\\\Step2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../assets/css/SignIn.css';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport icon from \"../assets/images/mortarboard.png\";\nimport axios from \"axios\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn(props) {\n  _s();\n\n  const [portfolio, setPortfolio] = useState(false);\n  const [strategy, setStrategy] = useState(false);\n  const [size, setSize] = useState(false);\n\n  function Next() {\n    if (!props.strategy_suggestion) {\n      setStrategy(true);\n      setTimeout(() => setStrategy(false), 1500);\n    }\n\n    if (!props.portfolio_size) {\n      setPortfolio(true);\n      setTimeout(() => setPortfolio(false), 1500);\n    }\n\n    if (props.portfolio_size < 1000 || typeof props.portfolio_size !== \"number\") {\n      setSize(true);\n      setTimeout(() => setSize(false), 3000);\n      setPortfolio(true);\n      setTimeout(() => setPortfolio(false), 1000);\n    }\n\n    if (props.strategy_suggestion !== \"\" && props.portfolio_size !== \"\" && props.portfolio_size >= 1000) {\n      props.next();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-heading\",\n          children: \"No subscription fees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"Ready to start? start by entering your email address and password in order to have permanent access to our strategies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step2Description\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Richmond Analytica manages your entire account on the exchange. If you want to trade only part of it, please create sub-account. See how\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Portfolio size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -username\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: size === false ? renderTooltipMissing : renderTooltipNumber,\n            show: portfolio,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"$ 10000\",\n              onChange: e => props.setPortfolio_size(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Strategy suggestion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -username\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: strategy,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.portfolio_size >= 100000,\n                value: \"ExpoRL\",\n                onChange: e => props.setStrategy_suggestion(e.target.value),\n                children: \"ExpoRL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: !props.portfolio_size <= 100000,\n                value: \"DeepEQ\",\n                onChange: e => props.setStrategy_suggestion(e.target.value),\n                children: \"DeepEq\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategyDescription\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategy\",\n            children: [/*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This strategy was proposed on the basis of the volumes traded on the markets.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategy\",\n            children: [/*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Minimum account size is $1000 in any crypto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-custom btn-lg page-scroll loginBtn\",\n          onClick: Next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"G9jsm6xdJJZKkRe+pffbLEYK/o4=\");\n\n_c = SignIn;\n\nconst renderTooltipMissing = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Please add all the field\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 5\n}, this);\n\nconst renderTooltipNumber = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: 'Field must be a number>=1000$'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 112,\n  columnNumber: 5\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Step2.jsx"],"names":["React","useState","HelpOutlineIcon","icon","axios","OverlayTrigger","Tooltip","SignIn","props","portfolio","setPortfolio","strategy","setStrategy","size","setSize","Next","strategy_suggestion","setTimeout","portfolio_size","next","show","hide","renderTooltipMissing","renderTooltipNumber","e","setPortfolio_size","target","value","setStrategy_suggestion"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport '../assets/css/SignIn.css'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport icon from \"../assets/images/mortarboard.png\"\nimport axios from \"axios\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\n\nexport default function SignIn(props) {\n    const [portfolio, setPortfolio] = useState(false)\n    const [strategy, setStrategy] = useState(false)\n    const [size, setSize] = useState(false)\n\n    function Next() {\n        if(!props.strategy_suggestion){\n            setStrategy(true)\n            setTimeout(() => setStrategy(false), 1500);\n        }\n        if(!props.portfolio_size){\n            setPortfolio(true)\n            setTimeout(() => setPortfolio(false), 1500);\n        }\n        if(props.portfolio_size<1000 || typeof(props.portfolio_size)!==\"number\"){\n            setSize(true)\n            setTimeout(() => setSize(false), 3000);\n            setPortfolio(true)\n            setTimeout(() => setPortfolio(false), 1000);\n\n        }\n        if(props.strategy_suggestion!==\"\" && props.portfolio_size!==\"\" &&props.portfolio_size>=1000 ){\n            props.next()\n        }\n\n        \n    }\n\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"login\">\n                <div className=\"login-form\">\n                    <h1 className=\"login-heading\">No subscription fees</h1>\n                    <p className=\"login-text\">Ready to start? start by entering your\n                        email address and password in order to\n                        have permanent access to our strategies</p>\n                    <div className=\"step2Description\">\n                        <img src={icon} alt=\"\" />\n                        <p>\n                            Richmond Analytica manages your\n                            entire account on the exchange.\n                            If you want to trade only part of it,\n                            please create sub-account. See how\n                        </p>\n                    </div>\n                    <label className=\"formLabel\">Portfolio size</label>\n                    <div className=\"field-container -username\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={size===false?renderTooltipMissing:renderTooltipNumber}\n                            show={portfolio}\n                            placement=\"top\"\n                        >\n                            <input type=\"email\" placeholder=\"$ 10000\" onChange={(e) => props.setPortfolio_size(e.target.value)} />\n                        </OverlayTrigger>\n                    </div>\n                    <label className=\"formLabel\">Strategy suggestion</label>\n                    <div className=\"field-container -username\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={strategy}\n                            placement=\"top\"\n                        >\n                            <select name=\"\" id=\"\">\n                                <option selected={props.portfolio_size>=100000} value=\"ExpoRL\" onChange={(e) => props.setStrategy_suggestion(e.target.value)} >ExpoRL</option>\n                                <option  selected={!props.portfolio_size<=100000} value=\"DeepEQ\" onChange={(e) => props.setStrategy_suggestion(e.target.value)} >DeepEq</option>\n                            </select>\n                            \n\n                        </OverlayTrigger>\n                    </div>\n                    <div className=\"strategyDescription\">\n                        <div className=\"strategy\">\n                            <HelpOutlineIcon />\n                            <p>\n                                This strategy was proposed on the basis of the\n                                volumes traded on the markets.\n                            </p>\n                        </div>\n                        <div className=\"strategy\">\n                            <HelpOutlineIcon />\n                            <p >\n                                Minimum account size is $1000 in any crypto.\n                            </p>\n                        </div>\n                    </div>\n                    <button className='btn btn-custom btn-lg page-scroll loginBtn' onClick={Next}>Next\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst renderTooltipMissing = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Please add all the field\n    </Tooltip>\n);\n\n\nconst renderTooltipNumber = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        {'Field must be a number>=1000$'}\n    </Tooltip>\n);\n\n"]},"metadata":{},"sourceType":"module"}