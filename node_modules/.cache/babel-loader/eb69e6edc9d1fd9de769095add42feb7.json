{"ast":null,"code":"var _jsxFileName = \"D:\\\\meher\\\\Bureau\\\\Projet_trading-main\\\\src\\\\components\\\\Step1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../assets/css/SignIn.css';\nimport axios from \"axios\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Step1(props) {\n  _s();\n\n  const [passwordConfirmTest, setPasswordConfirmTest] = useState(false);\n  const [emailTest, setEmailTest] = useState(false);\n  const [passwordTest, setPasswordtest] = useState(false);\n  const [passwordConfirmTestD, setPasswordConfirmTestD] = useState(false);\n  const [emailTestD, setEmailTestD] = useState(false);\n  const [test, setTest] = useState(\"\");\n  const [confirmTest, setConfirmTest] = useState(false);\n\n  function Verification() {\n    if (!props.email || !props.password || !props.passwordConfirm) {\n      setTest(\"a\");\n\n      if (!props.email) {\n        setEmailTestD(true);\n        setTimeout(() => setEmailTestD(false), 1500);\n      }\n\n      if (!props.password) {\n        setPasswordtest(true);\n        setTimeout(() => setPasswordtest(false), 1500);\n      }\n\n      if (!props.passwordConfirm) {\n        setPasswordConfirmTestD(true);\n        setTimeout(() => setPasswordConfirmTestD(false), 1500);\n      } // if ((!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email))) {\n      //     setEmailTest(true)\n      //     setEmailTestD(true)\n      //     setTimeout(() => setEmailTestD(false), 2000);\n      //     setTimeout(() => setEmailTest(false), 1500);\n      // }\n\n    } else {\n      setTest(\"b\");\n    }\n\n    if (props.password !== props.passwordConfirm) {\n      setTest(\"a\");\n      setPasswordConfirmTest(true);\n      setPasswordConfirmTestD(true);\n      setTimeout(() => setPasswordConfirmTest(false), 3000);\n      setTimeout(() => setPasswordConfirmTestD(false), 1100);\n    } else {\n      setTest(\"b\");\n    }\n\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email)) {\n      setEmailTest(true);\n      setTest(\"a\");\n      setEmailTestD(true);\n      setTimeout(() => setEmailTestD(false), 1500);\n      setTimeout(() => setEmailTest(false), 2000);\n    } else {\n      setTest(\"b\");\n    }\n\n    console.log(test);\n\n    if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email) && props.password === props.passwordConfirm && props.password) {\n      axios.post(\"http://localhost:3001/auth/client/check_mail\", {\n        email: props.email\n      }).then(res => {\n        setTest(\"a\");\n\n        if (res.data.error === true) {\n          setConfirmTest(true);\n          setEmailTestD(true);\n          setTimeout(() => setEmailTestD(false), 1500);\n          setTimeout(() => setConfirmTest(false), 2000);\n        } else {\n          props.next();\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-heading\",\n          children: \"We are happy to see you take the plunge!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"Ready to start? start by entering your email address and password in order to have permanent access to our strategies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -username\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: emailTest === true ? renderTooltipFormat : confirmTest === true ? renderTooltip : renderTooltipMissing,\n            show: emailTestD,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Enter your email*\",\n              onChange: e => props.setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: passwordTest,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter password*\",\n              onChange: e => props.setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: passwordConfirmTest === true ? renderTooltipConfirm : renderTooltipMissing,\n            show: passwordConfirmTestD,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm password*\",\n              onChange: e => props.setPasswordConfirm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-custom btn-lg page-scroll loginBtn\",\n          onClick: Verification,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Step1, \"7eGWHLIS3HJ3i1WWoPGniMfFl2g=\");\n\n_c = Step1;\n\nconst renderTooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"User aleardy exist\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 146,\n  columnNumber: 5\n}, this);\n\nconst renderTooltipConfirm = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Icompatible passwords\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 152,\n  columnNumber: 5\n}, this);\n\nconst renderTooltipMissing = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Please add all the field\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 158,\n  columnNumber: 5\n}, this);\n\nconst renderTooltipFormat = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Format invalid\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 164,\n  columnNumber: 5\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Step1.jsx"],"names":["React","useState","axios","OverlayTrigger","Tooltip","Step1","props","passwordConfirmTest","setPasswordConfirmTest","emailTest","setEmailTest","passwordTest","setPasswordtest","passwordConfirmTestD","setPasswordConfirmTestD","emailTestD","setEmailTestD","test","setTest","confirmTest","setConfirmTest","Verification","email","password","passwordConfirm","setTimeout","console","log","post","then","res","data","error","next","show","hide","renderTooltipFormat","renderTooltip","renderTooltipMissing","e","setEmail","target","value","setPassword","renderTooltipConfirm","setPasswordConfirm"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\"\nimport '../assets/css/SignIn.css'\nimport axios from \"axios\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nexport default function Step1(props) {\n    const [passwordConfirmTest, setPasswordConfirmTest] = useState(false)\n    const [emailTest, setEmailTest] = useState(false)\n    const [passwordTest, setPasswordtest] = useState(false)\n    const [passwordConfirmTestD, setPasswordConfirmTestD] = useState(false)\n    const [emailTestD, setEmailTestD] = useState(false)\n\n    const [test, setTest] = useState(\"\")\n\n    const [confirmTest, setConfirmTest] = useState(false)\n    function Verification() {\n        if (!props.email || !props.password || !props.passwordConfirm) {\n            setTest(\"a\")\n            if (!props.email) {\n                setEmailTestD(true)\n                setTimeout(() => setEmailTestD(false), 1500);\n\n            }\n            if (!props.password) {\n                setPasswordtest(true)\n                setTimeout(() => setPasswordtest(false), 1500);\n\n            }\n            if (!props.passwordConfirm) {\n                setPasswordConfirmTestD(true)\n                setTimeout(() => setPasswordConfirmTestD(false), 1500);\n\n            }\n            // if ((!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email))) {\n            //     setEmailTest(true)\n            //     setEmailTestD(true)\n            //     setTimeout(() => setEmailTestD(false), 2000);\n            //     setTimeout(() => setEmailTest(false), 1500);\n            // }\n\n        }\n        else {\n            setTest(\"b\")\n        }\n        if (props.password !== props.passwordConfirm) {\n\n            setTest(\"a\")\n            setPasswordConfirmTest(true)\n            setPasswordConfirmTestD(true)\n\n            setTimeout(() => setPasswordConfirmTest(false), 3000);\n            setTimeout(() => setPasswordConfirmTestD(false), 1100);\n\n        }\n        else {\n            setTest(\"b\")\n        }\n\n        if ((!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email))) {\n            setEmailTest(true)\n            setTest(\"a\")\n            setEmailTestD(true)\n            setTimeout(() => setEmailTestD(false), 1500);\n            setTimeout(() => setEmailTest(false), 2000);\n        }\n\n        else {\n            setTest(\"b\")\n        }\n        console.log(test)\n\n\n\n        if ((/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(props.email))&& props.password === props.passwordConfirm && props.password) {\n            axios.post(\"http://localhost:3001/auth/client/check_mail\", { email: props.email }).then(res => {\n                setTest(\"a\")\n                if (res.data.error === true) {\n                    setConfirmTest(true)\n                    \n                    setEmailTestD(true)\n                    setTimeout(() => setEmailTestD(false), 1500);\n            \n                    setTimeout(() => setConfirmTest(false), 2000);\n\n                }\n                else {\n                     \n                    props.next()\n                }\n            })\n        }\n\n\n    }\n\n\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"login\">\n                <div className=\"login-form\">\n                    <h1 className=\"login-heading\">We are happy to see\n                        you take the plunge!</h1>\n                    <p className=\"login-text\">Ready to start? start by entering your\n                        email address and password in order to\n                        have permanent access to our strategies</p>\n                    <div className=\"field-container -username\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={emailTest === true ? renderTooltipFormat : confirmTest === true ? renderTooltip : renderTooltipMissing}\n                            show={emailTestD}\n                            placement=\"top\"\n                        >\n                            <input type=\"email\" placeholder=\"Enter your email*\" onChange={(e) => props.setEmail(e.target.value)} />\n                        </OverlayTrigger>\n                    </div>\n                    <div className=\"field-container -password\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={passwordTest}\n                            placement=\"top\"\n                        >\n                            <input type=\"password\" placeholder=\"Enter password*\" onChange={(e) => props.setPassword(e.target.value)} />\n                        </OverlayTrigger>\n                    </div>\n                    <div className=\"field-container -password\">\n                        <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={passwordConfirmTest === true ? renderTooltipConfirm : renderTooltipMissing}\n                            show={passwordConfirmTestD}\n                            placement=\"top\"\n                        >\n                            <input type=\"password\" placeholder=\"Confirm password*\" onChange={(e) => props.setPasswordConfirm(e.target.value)} />\n                        </OverlayTrigger>\n                    </div>\n                    <button className='btn btn-custom btn-lg page-scroll loginBtn' onClick={Verification}>Sign Up\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        User aleardy exist\n    </Tooltip>\n);\n\nconst renderTooltipConfirm = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Icompatible passwords\n    </Tooltip>\n);\n\nconst renderTooltipMissing = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Please add all the field\n    </Tooltip>\n);\n\nconst renderTooltipFormat = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Format invalid\n    </Tooltip>\n);"]},"metadata":{},"sourceType":"module"}