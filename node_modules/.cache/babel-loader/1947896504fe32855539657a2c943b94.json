{"ast":null,"code":"var _jsxFileName = \"D:\\\\meher\\\\Bureau\\\\Projet_trading-main\\\\src\\\\components\\\\Step3.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../assets/css/SignIn.css';\nimport axios from \"axios\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport ReactLoading from \"react-loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn(props) {\n  _s();\n\n  const [api, setApi] = useState(false);\n  const [secret, setSecret] = useState(false);\n\n  function Next() {\n    if (!props.api) {\n      setApi(true);\n      setTimeout(() => setApi(false), 1500);\n    }\n\n    if (!props.secret) {\n      setSecret(true);\n      setTimeout(() => setSecret(false), 1500);\n    }\n\n    if (props.api !== \"\" && props.secret !== \"\") {\n      props.setLoading(true);\n      props.Send();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-heading\",\n          children: \"Connect your Binance acount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"The softest integration to our partner Binance Global or Binance US. Just follow these steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stepsList\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Go to Binance website\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Create API Key. See how.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Copy your API Key & Secret Key and paste it into the field below.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: api,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Your code\",\n              onChange: e => props.setApi(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"formLabel\",\n          children: \"Secret Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-container -password\",\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: renderTooltipMissing,\n            show: secret,\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Your code\",\n              onChange: e => props.setSecret(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-custom btn-lg page-scroll loginBtn\",\n          onClick: Next,\n          children: props.loading ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n            height: \"26px\",\n            width: \"24px\",\n            color: \"white\",\n            type: \"spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 118\n          }, this) : \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"tq0O9Vyypffe39r7j61003XGLfI=\");\n\n_c = SignIn;\n\nconst renderTooltipMissing = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n  id: \"button-tooltip\",\n  ...props,\n  children: \"Please add all the field\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 5\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/meher/Bureau/Projet_trading-main/src/components/Step3.jsx"],"names":["React","useState","axios","OverlayTrigger","Tooltip","ReactLoading","SignIn","props","api","setApi","secret","setSecret","Next","setTimeout","setLoading","Send","show","hide","renderTooltipMissing","e","target","value","loading"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\nimport '../assets/css/SignIn.css'\nimport axios from \"axios\"\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport ReactLoading from \"react-loading\";\nexport default function SignIn(props) {\n\n   \n    const [api, setApi] = useState(false);\n    const [secret, setSecret] = useState(false);\n    function Next() {\n        if(!props.api){\n            setApi(true)\n            setTimeout(() => setApi(false), 1500);\n        }\n        if(!props.secret){\n            setSecret(true)\n            setTimeout(() => setSecret(false), 1500);\n        }\n        if(props.api!==\"\" && props.secret!==\"\" ){\n          props.setLoading(true)\n            props.Send()\n           \n\n        }\n\n\n        \n    }\n    return (\n        <div className=\"loginContainer\">\n\n            <div className=\"login\">\n                <div className=\"login-form\">\n                    <h1 className=\"login-heading\">Connect your\n                        Binance acount</h1>\n                    <p className=\"login-text\">The softest integration to our\n                        partner Binance Global or Binance\n                        US. Just follow these steps</p>\n\n                    <div className=\"stepsList\">\n                        <ol>\n                            <li>\n                                Go to Binance website\n                            </li>\n                            <li>\n                                Create API Key. See how.\n                            </li>\n                            <li>\n                                Copy your API Key & Secret Key and paste it into the field below.\n                            </li>\n                        </ol>\n                    </div>\n                    <label className=\"formLabel\">API Key</label>\n                    <div className=\"field-container -password\">\n                    <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={api}\n                            placement=\"top\"\n                        >\n                        <input type=\"password\" placeholder=\"Your code\"  onChange={(e)=>props.setApi(e.target.value)}/>\n                        </OverlayTrigger>\n                    </div>\n                    <label className=\"formLabel\">Secret Key</label>\n                    \n                    <div className=\"field-container -password\">\n                    <OverlayTrigger\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltipMissing}\n                            show={secret}\n                            placement=\"top\"\n                        >\n                        <input type=\"password\" placeholder=\"Your code\" onChange={(e)=>props.setSecret(e.target.value)} />\n                   \n                        </OverlayTrigger>\n                    </div>\n                    <button className='btn btn-custom btn-lg page-scroll loginBtn' onClick={Next}>{ props.loading ? (<ReactLoading\n                            height={\"26px\"}\n                            width={\"24px\"}\n                            color=\"white\" \n                        \n                            type=\"spin\"\n                        />\n                    ) : (\n                        \"Get Started\" \n                    )}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst renderTooltipMissing = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        Please add all the field\n    </Tooltip>\n);"]},"metadata":{},"sourceType":"module"}